{"version":3,"sources":["api/fetchUser.js","features/search/searchSlice.js","components/Search/SearchBox.js","hooks/useLocalStorageState.js","features/user/userSlice.js","components/Search/SearchResult.js","components/Content/Content.js","components/App.js","app/store.js","index.js"],"names":["fetchUser","keyword","Promise","resolve","reject","a","queryParams","per_page","q","fetch","Object","entries","map","key","value","encodeURIComponent","join","json","data","message","items","fetchUserDetail","username","createAsyncThunk","fetchUserAPI","response","searchSlice","createSlice","name","initialState","error","localStorage","getItem","searchResultBox","result","reducers","search","state","action","payload","toggleSearchResultBox","toggleSearchResultBoxOn","toggleSearchResultBoxOff","extraReducers","fulfilled","rejected","actions","usersSelector","searchResultBoxSelector","SearchBox","React","memo","defaultValue","getValue","JSON","parse","setValue","setItem","stringify","useState","item","useLocalStorageState","searchValue","setSearchValue","dispatch","useDispatch","handleSearch","console","log","className","onChange","event","target","onKeyPress","code","type","placeholder","onClick","fetchUserDetailAPI","userSlice","status","newState","login","avatar","avatar_url","repos","public_repos","github","html_url","userInfoSelector","user","openState","useSelector","users","id","bio","location","followers","following","created_at","blog","twitter","twitter_username","company","src","alt","href","format","parseISO","icon","faThumbtack","text","faTwitter","faLink","faBuilding","index","App","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.183be8ca.chunk.js","sourcesContent":["export const fetchUser = (keyword) => {\n   return new Promise(async (resolve, reject) => {\n      if (keyword) {\n         const queryParams = {\n            per_page: 5,\n            q: keyword,\n         }\n         const data = await (\n            await fetch(\n               `https://api.github.com/search/users?${\n                  Object.entries( queryParams,)\n                     .map( ([key, value]) => \n                        `${encodeURIComponent(key)}=${encodeURIComponent( value,)}`,)\n                     .join('&')}`,)\n         ).json()\n         if (data.message) {\n            reject('Not found')\n         } \n         else resolve(data.items)\n      }\n   })\n}\n\nexport const fetchUserDetail = async (username) => {\n   const data = await (\n      await fetch(`https://api.github.com/users/${username}`)\n   ).json()\n   return data\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { fetchUser as fetchUserAPI } from 'api/fetchUser'\n\n\nconst setKeyword = keyword => localStorage.setItem('keyword', keyword)\nconst getKeyword = () => localStorage.getItem('keyword') || ''\n\nexport const fetchUser = createAsyncThunk(\n   'search/fetchUser',\n   async (keyword) => {\n         const response = await fetchUserAPI(keyword)\n   \n         return response\n   },\n)\n\nconst searchSlice = createSlice({\n   name: 'search',\n   initialState: {\n      error: null,\n      keyword: getKeyword(),\n      searchResultBox: false,\n      result: [],\n   },\n   reducers: {\n      search: (state, action) => {\n         state.keyword = action.payload\n      },\n      toggleSearchResultBox: (state) => {\n         state.searchResultBox = !state.searchResultBox\n      },\n      toggleSearchResultBoxOn: (state) => {\n         state.searchResultBox = true\n      },\n      toggleSearchResultBoxOff: (state) => {\n         state.searchResultBox = false\n      },\n   },\n   extraReducers: {\n      [fetchUser.fulfilled]: (state, action) => {\n         state.error = null\n         state.result = action.payload\n      },\n      [fetchUser.rejected]: (state, action) => {\n         state.error = action.payload\n      },\n   },\n})\n\nexport const {\n   search,\n   toggleSearchResultBox,\n   toggleSearchResultBoxOn,\n   toggleSearchResultBoxOff,\n} = searchSlice.actions\n\nexport const usersSelector = (state) => state.search.result\nexport const searchResultBoxSelector = (state) => state.search.searchResultBox\n\nexport default searchSlice.reducer\n","import React from \"react\"\nimport { useDispatch } from \"react-redux\"\n\nimport { fetchUser, toggleSearchResultBoxOn } from \"features/search/searchSlice\"\nimport './SearchBox.sass'\n\nimport useLocalStorageState from \"hooks/useLocalStorageState\"\n\n\nconst SearchBox = React.memo(function () {\n   const [searchValue, setSearchValue] = useLocalStorageState('search-keyword')\n   const dispatch = useDispatch()\n\n   const handleSearch = (keyword) => {\n      dispatch(fetchUser(keyword))\n      dispatch(toggleSearchResultBoxOn())\n   }\n   console.log('re-render');\n\n   const handleChange = (event) => {\n      setSearchValue(event.target.value)\n      // handleSearch(event.target.value)\n      // dispatch(toggleSearchResultBoxOn())\n   }\n\n   return (\n      <div className=\"search-box\">\n         <input\n            value={searchValue}\n            onChange={handleChange}\n            onKeyPress={(event) => {\n               if (event.code === 'Enter') handleSearch(event.target.value)\n            }}\n            // onFocus={() => dispatch(toggleSearchResultBoxOn())}\n            type=\"text\"\n            placeholder=\"Search Github username...\"\n         />\n         <button onClick={() => handleSearch(searchValue)} type=\"submit\">\n            Search\n         </button>\n      </div>\n   )\n})\n\nexport default SearchBox","import { useState } from 'react'\n\nexport default function useLocalStorageState(keyword, defaultValue='') {\n   const getValue = () => JSON.parse(localStorage.getItem(keyword)) || defaultValue\n   const setValue = value => localStorage.setItem(keyword, JSON.stringify(value)) \n\n   const [item, setItem] = useState(getValue())\n\n   return [\n      item,\n      (value) => {\n         setItem(value)\n         setValue(value)\n      }\n   ]\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nimport { fetchUserDetail as fetchUserDetailAPI } from \"api/fetchUser\";\n\n\nexport const fetchUserDetail = createAsyncThunk('user/fetchUserDetail', async (username) => {\n   const data = await fetchUserDetailAPI(username)\n   return data\n})\n\nconst userSlice = createSlice({\n   name: 'user',\n   initialState: {\n      status: 'none', //? none | finished\n      ...JSON.parse(localStorage.getItem('user-info'))\n   },\n   extraReducers: {\n      [fetchUserDetail.fulfilled]: (state, action) => {\n         const newState = {\n            ...state,\n            status: 'finished',\n            username: action.payload.login,\n            avatar: action.payload.avatar_url,\n            repos: action.payload.public_repos,\n            github: action.payload.html_url,\n            ...action.payload,\n         }\n         localStorage.setItem('user-info', JSON.stringify(newState))\n         return newState\n      }\n   }\n})\n\nexport const userInfoSelector = state => state.user\n\nexport default userSlice.reducer","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n   usersSelector,\n   searchResultBoxSelector,\n} from 'features/search/searchSlice'\nimport { toggleSearchResultBox, toggleSearchResultBoxOff } from 'features/search/searchSlice'\nimport { fetchUserDetail } from 'features/user/userSlice'\n\nimport './SearchResult.sass'\n\nexport default React.memo(function () {\n   const openState = useSelector(searchResultBoxSelector)\n\n   const users = useSelector(usersSelector)\n   const dispatch = useDispatch()\n\n   const handleLoadUserProfile = (username) => () => {\n      dispatch(toggleSearchResultBoxOff())\n      dispatch(fetchUserDetail(username))\n   }\n\n   const handleToggleSelect = (event) => {\n      dispatch(toggleSearchResultBox())\n   }\n\n   return (\n      <div className=\"search-result\">\n         <div\n            className={`wrapper ${openState ? '' : 'closed'}`}\n            onClick={handleToggleSelect}\n         ></div>\n         <ul key={openState} className={`${openState ? '' : 'ul-closed'}`}>\n            {/* some thing inside ul */}\n            {users.map((user) => (\n               <li onClick={handleLoadUserProfile(user.login)} key={user.id}>\n                  {user.login}\n               </li>\n            ))}\n         </ul>\n      </div>\n   )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { parseISO, format } from 'date-fns'\n\nimport { userInfoSelector } from 'features/user/userSlice'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n   faThumbtack,\n   faLink,\n   faBuilding,\n} from '@fortawesome/free-solid-svg-icons'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\n\nimport './Content.sass'\n\nexport default React.memo(function () {\n   const {\n      status,\n      username,\n      bio,\n      avatar,\n      name,\n      location,\n      repos,\n      github,\n      followers,\n      following,\n      created_at,\n      blog,\n      twitter_username: twitter,\n      company,\n   } = useSelector(userInfoSelector)\n\n   // const status = 'finished'\n   // const username = 'A'\n   // const avatar = 'https://avatars.githubusercontent.com/u/1410106?v=4'\n   // const repos = 46\n   // const github = 'https://github.com/A'\n   // const name = 'Shuvalov Anton'\n   // const company = null\n   // const blog = 'http://shuvalov.info'\n   // const location = 'Ho Chi Minh, Vietnam'\n   // const bio = null\n   // const twitter = 'shuvalov_js'\n   // const followers = 468\n   // const following = 141\n   // const created_at = '2012-02-05T14:53:26Z'\n\n   return (\n      <div className=\"content\">\n         {status === 'finished' ? (\n            <>\n               <div className=\"content__image-wrapper\">\n                  <img src={avatar} alt=\"User avatar\" />\n               </div>\n               <div className=\"content__main\">\n                  <div className=\"content__header\">\n                     <div className=\"content__header__info\">\n                        <div className=\"content__title\">\n                           <h2 className=\"content__name\">{name}</h2>\n                           <a\n                              href={github}\n                              target=\"_blank\"\n                              className=\"content__username\"\n                           >\n                              @{username}\n                           </a>\n                        </div>\n                        <div className=\"content__join-date\">\n                           <p className=\"text--bold\">\n                              Joined{' '}\n                              {format(parseISO(created_at), 'dd MMM yyyy')}\n                           </p>\n                        </div>\n                     </div>\n                     <p className=\"text--faded\">\n                        {bio || 'This profile has no bio'}\n                     </p>\n                  </div>\n                  <div className=\"content__profile-info\">\n                     <div className=\"content__profile-info__item\">\n                        <p className=\"content__profile-info__title text--bold\">\n                           Repos\n                        </p>\n                        <p className=\"content__profile-info__number\">{repos}</p>\n                     </div>\n                     <div className=\"content__profile-info__item\">\n                        <p className=\"content__profile-info__title text--bold\">\n                           Followers\n                        </p>\n                        <p className=\"content__profile-info__number\">\n                           {followers}\n                        </p>\n                     </div>\n                     <div className=\"content__profile-info__item\">\n                        <p className=\"content__profile-info__title text--bold\">\n                           Following\n                        </p>\n                        <p className=\"content__profile-info__number\">\n                           {following}\n                        </p>\n                     </div>\n                  </div>\n                  <div className=\"content__contact\">\n                     {[\n                        {\n                           icon: <FontAwesomeIcon icon={faThumbtack} />,\n                           text: location,\n                        },\n                        {\n                           icon: <FontAwesomeIcon icon={faTwitter} />,\n                           text: twitter,\n                        },\n                        {\n                           icon: <FontAwesomeIcon icon={faLink} />,\n                           text: blog,\n                        },\n                        {\n                           icon: <FontAwesomeIcon icon={faBuilding} />,\n                           text: company,\n                        },\n                     ].map((item, index) => (\n                        <div\n                           key={index}\n                           className={`content__contact__item ${\n                              item.text ? 'text--bold' : 'text--faded'\n                           }`}\n                        >\n                           <div className=\"content__contact__icon\">\n                              {item.icon}\n                           </div>\n                           <div className=\"content__contact__text\">\n                              {item.text || 'Not available'}\n                           </div>\n                        </div>\n                     ))}\n                  </div>\n               </div>\n            </>\n         ) : (\n            <>\n               <p>Nothing had been found</p>\n            </>\n         )}\n      </div>\n   )\n})\n","import \"./App.sass\"\nimport SearchBox from \"components/Search/SearchBox\"\nimport SearchResult from \"components/Search/SearchResult\"\nimport Content from \"components/Content/Content\"\n\nfunction App() {\n   return <div className=\"container\">\n      <SearchBox />\n      <SearchResult />\n      <Content />\n   </div>\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport searchSlice from \"features/search/searchSlice\"\nimport userSlice from \"features/user/userSlice\"\n\nexport default configureStore({\n   reducer: {\n      search: searchSlice,\n      user: userSlice\n   }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from 'components/App';\n\nimport { Provider } from 'react-redux'\nimport store from 'app/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}